<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Blog | Working Blog]]></title>
  <link href="http://mostlybob.github.io/blog/categories/blog/atom.xml" rel="self"/>
  <link href="http://mostlybob.github.io/"/>
  <updated>2014-10-22T06:17:33-05:00</updated>
  <id>http://mostlybob.github.io/</id>
  <author>
    <name><![CDATA[Bob Campbell]]></name>
    <email><![CDATA[mostlybob@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Octopress and the _deploy Folder]]></title>
    <link href="http://mostlybob.github.io/blog/2014/10/22/octopress-and-the-deploy-folder/"/>
    <updated>2014-10-22T05:51:59-05:00</updated>
    <id>http://mostlybob.github.io/blog/2014/10/22/octopress-and-the-deploy-folder</id>
    <content type="html"><![CDATA[<p>Another short one. In the process of chasing around the issue with getting the SSH to work with Octopress, I inadvertantly deleted the <code>_deploy</code> folder. When I saw the rake task complaining about the folder being missing, I recreated it and (thought) things were well. Then I noticed that my blog was no longer updating. Everything was safe and backed up, so I thought, just blow it away and start over.</p>

<p>What I found during the set up is that the <code>_deploy</code> folder enjoys a special status within the source branch of being pointed at master. This makes sense, given its role, but I didn’t know you could do this with git. Ah, the process of discovery. I’ll have to tuck that little characteristic away for future reference.</p>

<p>At any rate, I seem to be back on track, although one upshot is that I lost my commit history by deleting the old GH repo. I still have the old repo local, at least until I decide to get rid of it.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Octopress &amp; SSH?]]></title>
    <link href="http://mostlybob.github.io/blog/2014/10/20/octopress-and-ssh/"/>
    <updated>2014-10-20T20:27:08-05:00</updated>
    <id>http://mostlybob.github.io/blog/2014/10/20/octopress-and-ssh</id>
    <content type="html"><![CDATA[<p>Ok, it’s not the most elegant solution, but here it is. Sigh. Delete the repo and reclone using the ssh url. If you’re reading this, then it worked. I suppose there are better, more git-ish ways of doing it, but as mom would say, any landing you can walk away from&hellip;</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Updating Octopress to Use SSH for Github Pages]]></title>
    <link href="http://mostlybob.github.io/blog/2014/10/17/updating-octopress-to-use-ssh-for-github-pages/"/>
    <updated>2014-10-17T05:45:57-05:00</updated>
    <id>http://mostlybob.github.io/blog/2014/10/17/updating-octopress-to-use-ssh-for-github-pages</id>
    <content type="html"><![CDATA[<p>In the afore-mentioned spirit of building the boat as it’s moving away from the dock, I’m sort of trying this one on the fly. After switching the remotes, I had expected the deploy to “just work,” since it was pushing to a Github repo. When I deployed, however, it still asked for my GH credentials. Without actually looking at the Rakefile Octopress uses, I had assumed that there was a bit of configuration in the deploy task that was telling it to use a different method. When I actually looked at it, though, no such luck:</p>

<pre><code class="ruby task, task, who has the task?">task :deploy do
  # Check if preview posts exist, which should not be published
  if File.exists?(“.preview-mode”)
    puts “## Found posts in preview mode, regenerating files ...”
    File.delete(“.preview-mode”)
    Rake::Task[:generate].execute
   end

   Rake::Task[:copydot].invoke(source_dir, public_dir)
   Rake::Task[“#{deploy_default}”].execute
 end
</code></pre>

<p>Nothing pertaining to my blog, specifically, to be seen, but there was that <code>deploy_default</code> task. All it said was “push” so not much there either. There was another variable in that block, though, called <code>ssh_user</code> with a default e-mail address in it. I replaced it with the e-mail address I used to create the SSH keys and I’m thinking that might do it, the reasoning being if it tried to push with an invalid SSH setting, GH would fall back to the HTTPS mode. I could be wrong, but I thought I’d give that a whirl.</p>

<p>Sure I could do a search for all this, but I’m in an experimental mood. Let’s see how it goes.</p>

<p><em>Ok, it didn’t work - the deploy still asked for credentials, so I sense a web search in my future. For science!</em></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Updating the Blog Setup to Use SSH]]></title>
    <link href="http://mostlybob.github.io/blog/2014/10/16/updating-the-blog-setup-to-use-ssh/"/>
    <updated>2014-10-16T12:32:45-05:00</updated>
    <id>http://mostlybob.github.io/blog/2014/10/16/updating-the-blog-setup-to-use-ssh</id>
    <content type="html"><![CDATA[<p>Generally speaking, I’ve found the workflow using Octopress to get stuff onto the blog reasonably straightforward. One bit that hangs me up, more for the inconvenience, is having to stop and enter my username &amp; password everytime I deploy or push something to the repo on Github. It’s not a lot, but over the course of a typical session, if I have to do it, say, 6 or 7 times, it gets a little tiresome.</p>

<p>I’ve known for some time that Github makes it possible to set up SSH authentication so that you can sidestep this little hitch in the routine. This seemed like a nice little thing to blog about. Who knows? I never googled it with DuckDuckGo, so there may be a ton of stuff out there on this very topic, but I’m looking for stuff to write about and it beats a page of <a href="http://lipsum.com/">Lorem Ipsum</a>.</p>

<h3>Establish your keys</h3>

<p>If you haven’t done so already, you need to set up SSH keys locally. I followed the directions <a href="https://help.github.com/articles/generating-ssh-keys/">here</a>, since I’m using Github. I have plans to explore deploying Jekyll/Octopress blog(s) to a more traditional shared webhosting solution, but for today, it’s Github. I’m using Linux. Mac should be much the same. Windows, out of the box, is a bit stunted in this regard. Your friendly neighborhood search engine should be able to <a href="https://duckduckgo.com/?q=setting+up+SSH+on+windows">direct you</a> toward setting up SSH on Windows.</p>

<h3>Change your remote</h3>

<p>Being somewhat lazy (or expeditious, choose), I set up things using the most direct route possible, meaning HTTPS for my github repo. Had I not, you’d be reading <a href="http://www.reddit.com/r/catpictures/">something else</a>. Here again, <a href="https://help.github.com/articles/changing-a-remote-s-url/">Github spells it out</a>.</p>

<h3>Test your changes</h3>

<p>Rubber to road time. I followed the directions literally and took the name of the repo using HTTPS and stuck a 2 on the end of it for the SSH remote. As I suspected, git didn’t like that when I tried to push my commits. I took the 2 off and all was well. To reiterate, if you have a remote that looks like this when you do a <code>git remote -v</code></p>

<pre><code>origin  https://github.com/palmolivemadge/ur-soaking-in-it.git (fetch)
origin  https://github.com/palmolivemadge/ur-soaking-in-it.git (push)
</code></pre>

<p>don’t do this:</p>

<pre><code>$ git remote set-url origin git@github.com:palmolivemadge/ur-soaking-in-it2.git
</code></pre>

<p>Note the 2 on the end, just like what GH said in its post. Instead, do this:</p>

<pre><code>$ git remote set-url origin git@github.com:palmolivemadge/ur-soaking-in-it.git
</code></pre>

<p>There are probably excellent reasons for GH describing things the way they did, but for us poor, literal-minded souls, they are a little misleading. It’s an easy mistake to spot and fix, but sometimes the dumbest things hang up the smartest people.</p>

<p>The follow-up to this will be altering the rake tasks in Octopress to use the SSH repo instead of the HTTPS. Enough pesky passwords!</p>

<p>Hey. Not so bad for my first substantial post, and only one day in. Onward!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[The Current State of Things]]></title>
    <link href="http://mostlybob.github.io/blog/2014/10/15/the-current-state-of-things/"/>
    <updated>2014-10-15T11:58:02-05:00</updated>
    <id>http://mostlybob.github.io/blog/2014/10/15/the-current-state-of-things</id>
    <content type="html"><![CDATA[<p>Somewhere in the wagon-load of ideas and notions I have banging around inside my head, there&rsquo;s a higher notion of what I want to put in this post and in the larger blog. I&rsquo;ve started the post a couple of times and it keeps getting bogged down or sidetracked in minutiae. Keeping a blog is an idea I&rsquo;ve always liked. Moreso than just a simple journal, having a public accounting of my activity, I think, is good way to keep me on track. Distractions abound, so I&rsquo;m going to keep this simple.</p>

<p>The idea of an arbitrary or recurring schedule (think <a href="http://www.jonathancoulton.com/primer/thing-a-week/">Thing a Week</a>, if you&rsquo;re JoCo inclined) for blogging appeals to me at this point in the process, mainly because I&rsquo;m out of the habit and there are lots of things, workflow-wise, that a stipulated schedule could give things the needed nudge. So, in that spirit, let&rsquo;s see if I can get on some sort of weekly schedule - minimum one post a week.</p>

<p>I do have a few expectations:</p>

<ul>
<li>get better with Jekyll/Octopress - surprisingly lots to know here.</li>
<li>sort out where the blog is going to go. Yep, nothing like building the boat as it&rsquo;s pulling away from the dock.</li>
<li>post successes, or at least progress, however minimal. This one could be tricky, since I&rsquo;m working with a few things like Go and Python at a <em>really</em> basic level. In my other life, I&rsquo;m a full-time senior .Net dev, operating at a level far above where I am with those other languages. Sometimes it&rsquo;s hard to get enthusiastic about &ldquo;Look! I can put a Fibonacci sequence to the console!&rdquo;</li>
<li>try to have fun with it. There are a lot of places to get technical advice. For the things I&rsquo;m interested in, I&rsquo;m a ways from a level of proficiency that anyone would find useful. In the absence of being helpful, my aim is to be at least a bit amusing. If I can&rsquo;t do that, then there&rsquo;s probably not much point to this little exercise.</li>
</ul>


<p>What I don&rsquo;t expect:</p>

<ul>
<li>to take the web by storm. There are boatloads of blogs out there on just the things I&rsquo;m interested in. No one in my family will read this and even if they did I can&rsquo;t say they&rsquo;d find much of interest. With a ready-built audience out of the question, I&rsquo;ll have to plug away it in anonymity. Good thing I&rsquo;m in it for the lulz (ew, forget I said that).</li>
</ul>

]]></content>
  </entry>
  
</feed>
